.. _accessibility-options:

################################
Accessibility Extensions Options
################################

MathJax contains several extensions meant to support those who need
assistive technology, such as screen readers.  See the
:ref:`accessibility-components` page for more details.  The options
that control these extensions are listed below.

* :ref:`semantic-enrich-options`
* :ref:`complexity-options`
* :ref:`explorer-options`

-----

.. _semantic-enrich-options:

Semantic-Enrich Extension Options
=================================

This extension coordinates the creation and embedding of semantic
information generated by the enrichment process within the MathJax
output for use by the other extensions.

The `semantic-enrich` extension adds two actions to the document's
default :ref:`renderActions <document-renderActions>` object: an
``enrich`` action to perform the semantic entrichment, and an
``attachSpeech`` action to attach speech (if it is being generated) to
the output.

The Configuration Block
-----------------------

.. code-block:: javascript

   MathJax = {
     options: {
       enrichSpeech: 'none',    // or 'shallow', or 'deep'
     }
   };

Option Descriptions
-------------------

.. _semantic-enrich-speech:
.. describe:: enrichSpeech: 'none'

   This setting controls whether MathJax uses the Speech-Rule Engine
   (SRE) to generate a speech string for the expressions on the page.
   If set to ``'none'`` (the default), no speech is generated.  When set
   to ``'shallow'``, speech is generated only for the complete
   equation, and when set to ``'deep'``, every speakable element is
   marked with its speech string.  These speech strings are put in
   ``data-semantic-speech`` attributes, when generated.  The output
   processors will find the top-most speech string and set the
   appropriate attributes on the output they generate so that screen
   readers can find it.


-----

.. _complexity-options:

Complexity Extension Options
============================

This extension generates a complexity metric and inserts elements 
that allow the expressions to be collapsed by the user by clicking 
on the expression based on that metric.  Use the ``'a11y/complexity'``
block of your MathJax configuration to configure the extension.

The `complexity` extension adds a ``complexity`` action to the
document's default :ref:`renderActions <document-renderActions>`
object.

The Configuration Block
-----------------------

.. code-block:: javascript

   MathJax = {
     options: {
       makeCollapsible: true         // insert maction to allow collapsing
     }
   };

Option Descriptions
-------------------

.. _complexity-makeCollapsible:
.. describe:: makeCollapsible: true

   This setting determines whether the extension will insert
   ``<maction>`` elements to allow complex expressions to be
   "collapsed" so that they take up less space, and produce condensed
   speech strings that are simpler to listen to.  When false, the
   expression is not altered, but elements are marked (internally) if
   they would be collapsible.


Developer Options
-----------------

.. _complexity-identifyCollapsible:
.. describe:: identifyCollapsible: true

   This setting determines whether the complexity numbers computed for
   each element in the expression should take collapsing into
   account.  If true, parents of collapsible elements will get
   complexities that reflect the collapsible elements being
   collapsed.  When false, the complexities assume no collapsing will
   take place.

.. _complexity-Collapse:
.. describe:: Collapse: Collapse

   The ``Collapse`` object class to use for creating the ``<maction>``
   elements needed for collapsing complex expressions.  This allows
   you to create a subclass of ``Collapse`` and pass that to the
   document.

.. _complexity-ComplexityVisitor:
.. describe:: ComplexityVisitor: ComplexityVisitor

   The ``ComplexityVisitor`` object class to use for managing the
   computations of complexity values.  This allows you to create a
   subclass of ``ComplexityVisitor`` and pass that to the document.

-----

.. _explorer-options:

Explorer Extension Options
==========================

This extension provides support for interactive exploration of
expressins within the page.  See the :ref:`accessibility` page for
details about how this works.

The `explorer` extension adds an ``explorable`` action to the
document's default :ref:`renderActions <document-renderActions>`
object.

The Configuration Block
-----------------------

.. code-block:: javascript

   MathJax = {
     options: {
       a11y: {
         subtitles: true,             // show speech as a subtitle
         foregroundColor: 'Black',    // color to use for text of selected sub-expression
         foregroundOpacity: 1,        // opacity for text of selected sub-expression
         backgroundColor: 'Blue',     // color for background of selected sub-expression
         backgroundOpacity: .2,       // opacity afor background of selected sub-expression
         align: 'top',                // placement of zoomed expressions
         magnify: 500                 // magnification of zoomed expressions (as a percent)
       }
     }
   };

Option Descriptions
-------------------

.. _explorer-subtitles:
.. describe:: subtitles: true

   This option indicates whether the speech string for the selected
   sub-expression will be shown as a subtitle under the expression as
   it is explored.

.. _explorer-foregroundColor:
.. describe:: foregroundColor: 'Black'

   This specifies the color to use for the text of the selected
   sub-expression during expression exploration.  The color should be
   chosen from among the following: ``'Blue'``, ``'Red'``,
   ``'Green'``, ``'Yellow'``, ``'Cyan'``, ``'Magenta'``, ``'White'``,
   and ``'Black'``.

.. _explorer-foregroundOpacity:
.. describe:: foregroundOpacity: 1

   This indicates the opacity to use for the text of the selected
   sub-expression.

.. _explorer-backgroundColor:
.. describe:: backgroundColor: 'Blue'

   This specifies the background color to use for the selected
   sub-expression during expression exploration.  The color should be
   chosen from among the following: ``'Blue'``, ``'Red'``,
   ``'Green'``, ``'Yellow'``, ``'Cyan'``, ``'Magenta'``, ``'White'``,
   and ``'Black'``.

.. _explorer-backgroundOpacity:
.. describe:: backgroundOpacity: .2

   This indicates the opacity to use for the background color of the
   selected sub-expression.

.. _explorer-align:
.. describe:: align: 'top'

   This setting tells where to place the zoomed version of the
   selected sub-expression, when zoomed sub-expressions are being
   displayed during expression expoloration.

.. _explorer-magnify:
.. describe:: magnify: 500

   This gives the magnification factor (as a percent) to use for the
   zoomed sub-expression when zoomed sub-expressions are being
   displayed during expression exploration.  The default is 500,
   meaning 500%.

-----

.. raw:: html

   <span></span>
